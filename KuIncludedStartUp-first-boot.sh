#!/bin/bash

# Log everything to file
exec &> >(tee -a "/boot/first-boot.log")

timestamp() { date +"%F_%T_%Z"; }

#only executed after compltion of first_boot script
ku_install() {
cd /home/openhabian
echo 'git clone https://github.com/Ujjwal1987/wifihotspot.git'
/usr/bin/git clone -b master https://github.com/Ujjwal1987/wifihotspot.git  &>/dev/null 
if [ ! -f "$KU_FIRSTBOOT" ]; then 
echo "[KuControl] '$KU_FIRSTBOOT' not found"
fi
if (/bin/bash "$KU_FIRSTBOOT"); then
    echo "[KuControl] Installtion finishing.."
    echo  "[KuControl] first boot succeeded..(see /home/openhabian/KuControl_startup.sh"
else
    echo "[KuControl] Script '$KU_FIRSTBOOT' failed"
fi
}


fail_inprogress() {
  rm -f /opt/openHABian-install-inprogress
  touch /opt/openHABian-install-failed
  echo -e "$(timestamp) [openHABian] Initial setup exiting with an error!\\n\\n"
  exit 1
}

echo "$(timestamp) [openHABian] Starting the openHABian initial setup."
rm -f /opt/openHABian-install-failed
touch /opt/openHABian-install-inprogress

echo -n "$(timestamp) [openHABian] Storing configuration... "
cp /boot/openhabian.conf /etc/openhabian.conf
sed -i 's/\r$//' /etc/openhabian.conf
# shellcheck source=openhabian.raspbian.conf
source /etc/openhabian.conf
echo "OK"

userdef="pi"
echo -n "$(timestamp) [openHABian] Changing default username and password... "
if [ -z ${username+x} ] || ! id $userdef &>/dev/null || id "$username" &>/dev/null; then
  echo "SKIPPED"
else
  usermod -l "$username" $userdef
  usermod -m -d "/home/$username" "$username"
  groupmod -n "$username" $userdef
  chpasswd <<< "$username:$userpw"
  echo "OK"
fi

# While setup: show log to logged in user, will be overwritten by openhabian-setup.sh
echo "watch cat /boot/first-boot.log" > "/home/$username/.bash_profile"

if [ -z "${wifi_ssid}" ]; then
  echo "$(timestamp) [openHABian] Setting up Ethernet connection... OK"
elif grep -q "openHABian" /etc/wpa_supplicant/wpa_supplicant.conf; then
  echo "$(timestamp) [openHABian] Setting up Wi-Fi connection... OK"
else
  echo -n "$(timestamp) [openHABian] Setting up Wi-Fi connection... "
  echo -e "# config generated by openHABian first boot setup" > /etc/wpa_supplicant/wpa_supplicant.conf
  echo -e "country=US\\nctrl_interface=DIR=/var/run/wpa_supplicant GROUP=netdev\\nupdate_config=1" >> /etc/wpa_supplicant/wpa_supplicant.conf
  echo -e "network={\\n\\tssid=\"$wifi_ssid\"\\n\\tpsk=\"$wifi_psk\"\\n\\tkey_mgmt=WPA-PSK\\n}" >> /etc/wpa_supplicant/wpa_supplicant.conf
  echo "OK, rebooting... "
  reboot
fi

echo -n "$(timestamp) [openHABian] Ensuring network connectivity... "
cnt=0
until ping -c1 9.9.9.9 &>/dev/null || [ "$(wget -qO- http://www.msftncsi.com/ncsi.txt)" == "Microsoft NCSI" ]; do
  sleep 1
  cnt=$((cnt + 1))
  #echo -n ". "
  if [ $cnt -eq 100 ]; then
    echo "FAILED"
    if grep -q "openHABian" /etc/wpa_supplicant/wpa_supplicant.conf && iwconfig 2>&1 | grep -q "ESSID:off"; then
      echo ""
      echo "I was not able to connect to the configured Wi-Fi."
      echo "Please try again with your correct SSID and password."
      echo "Also check your signal quality. Available Wi-Fi networks:"
      iwlist wlan0 scanning | grep "ESSID" | sed 's/^\s*ESSID:/\t- /g'
      echo ""
    else
      echo "$(timestamp) [openHABian] The public internet is not reachable. Please check your network."
    fi
    fail_inprogress
  fi
done
echo "OK"

echo -n "$(timestamp) [openHABian] Waiting for dpkg/apt to get ready... "
until apt update &>/dev/null; do sleep 1; done
echo "OK"

echo -n "$(timestamp) [openHABian] Updating repositories and upgrading installed packages... "
apt update &>/dev/null
apt --yes upgrade &>/dev/null
if [ $? -eq 0 ]; then echo "OK"; else echo "FAILED"; fail_inprogress; fi

echo -n "$(timestamp) [openHABian] Installing git package... "
apt update &>/dev/null
/usr/bin/apt -y install git &>/dev/null
if [ $? -eq 0 ]; then echo "OK"; else echo "FAILED"; fail_inprogress; fi

echo -n "$(timestamp) [openHABian] Cloning myself... "
/usr/bin/git clone -b master https://github.com/openhab/openhabian.git /opt/openhabian &>/dev/null
#/usr/bin/git clone -b develop https://github.com/openhab/openhabian.git /opt/openhabian &>/dev/null
if [ $? -eq 0 ]; then echo "OK"; else echo "FAILED"; fail_inprogress; fi
ln -sfn /opt/openhabian/openhabian-setup.sh /usr/local/bin/openhabian-config

echo "$(timestamp) [openHABian] Executing 'openhabian-setup.sh unattended'... "
if (/bin/bash /opt/openhabian/openhabian-setup.sh unattended); then
#if (/bin/bash /opt/openhabian/openhabian-setup.sh unattended_debug); then
  systemctl start openhab2.service
  rm -f /opt/openHABian-install-inprogress
  touch /opt/openHABian-install-successful
else
  fail_inprogress
fi
echo "$(timestamp) [openHABian] Execution of 'openhabian-setup.sh unattended' completed."

echo -n "$(timestamp) [openHABian] Waiting for openHAB to become ready... "
until wget -S --spider http://localhost:8080 2>&1 | grep -q 'HTTP/1.1 200 OK'; do
  sleep 1
done
echo "OK"

echo "$(timestamp) [openHABian] Visit the openHAB dashboard now: http://$hostname:8080"
echo "$(timestamp) [openHABian] To gain access to a console, simply reconnect."
echo "$(timestamp) [openHABian] First time setup successfully finished."





#Executed after compltion of first_boot script
#######Install KuControl_startUp.sh script
# vim: filetype=sh
#!/bin/bash

cd /home/openhabian
echo 'git clone https://github.com/Ujjwal1987/wifihotspot.git'
/usr/bin/git clone -b master https://github.com/Ujjwal1987/wifihotspot.git  &>/dev/null 
echo 'aptt-get update'
until apt-get update &>/dev/null; do sleep 1 ; done
echo "OK"
echo 'apt-get -y install mosquitto mosquitto-clients'
until apt-get -y install mosquitto mosquitto-clients &>/dev/null;  do sleep 1; done
echo "OK"
echo 'mosquitto_passwd -b /etc/mosquitto/passwd openhabian Ujjwal1234$'
mosquitto_passwd -b /etc/mosquitto/passwd openhabian Ujjwal1234$
echo 'systemctl enable mosquitto.service'
systemctl enable mosquitto.service
echo 'systemctl restart mosquitto.service'
systemctl restart mosquitto.service
echo 'apt-get -y install dnsmasq hostapd'
until apt-get -y install dnsmasq hostapd &>/dev/null; do sleep 1; done
echo "OK"
#echo 'git clone https://github.com/Ujjwal1987/wifihotspot.git'
#git clone https://github.com/Ujjwal1987/wifihotspot.git
#echo 'git clone https://github.com/Ujjwal1987/Autodiscovery.git'
#/usr/bin/git clone https://github.com/Ujjwal1987/Autodiscovery.git &>/dev/null
#if [ $? -eq 0 ]; then echo "OK"; else echo "Failed"; fi
echo 'cp -r /home/openhabian/wifihotspot/autodiscover /etc/systemd/'
cp -r /home/openhabian/wifihotspot/autodiscover /etc/systemd/
echo 'cp -r /home/openhabian/wifihotspot/autodiscover.service /etc/systemd/system/'
cp -r /home/openhabian/wifihotspot/autodiscover.service /etc/systemd/system/ 


#load addons in /var/lib....for execution of included functions before loading mqtt.cfg
echo 'load /var/lib/openhab2/config/org/openhab/openhabcloud.config'
file=/var/lib/openhab2/config/org/openhab/openhabcloud.config
file1=/home/openhabian/wifihotspot/openhabcloud.config
if [ ! -f $file ]
 then  cp $file1 $file
else
     echo "/var/lib/openhab2/config/org/openhab/openhabcloud.config not copied-already exists"
fi

#load addons in /etc/openhab2/services...for execution of included functions before loading mqtt.cfg
echo 'load /etc/openhab2/services/addons.cfg'
file=/etc/openhab2/services/addons.cfg
file1=/home/openhabian/wifihotspot/addons.cfg
while [ ! -f $file ]
do
   echo "addons.cfg  file does not exist"
done
echo 'cp /home/openhabian/wifihotspot/addons.cfg /etc/openhab2/services/'
cp /home/openhabian/wifihotspot/addons.cfg /etc/openhab2/services/

#load mqtt.cfg in /etc/openhab2/services
echo 'load  /etc/openhab2/service/mqtt.cfg'
file=/etc/openhab2/services/mqtt.cfg
file1=/home/openhabian/wifihotspot/mqtt.cfg
while [ ! -f $file ]
do
  echo "mqtt.cfg  file does not exist"
done
cp $file1 $file



echo 'cp /home/openhabian/wifihotspot/kucontrol.service /etc/avahi/services/'
cp /home/openhabian/wifihotspot/kucontrol.service /etc/avahi/services/
echo 'cp /home/openhabian/wifihotspot/dhcpcd.conf.back /etc/'
cp /home/openhabian/wifihotspot/dhcpcd.conf.back /etc/
echo 'cp /home/openhabian/wifihotspot/dhcpcd.conf.back1 /etc/'
cp /home/openhabian/wifihotspot/dhcpcd.conf.back1 /etc/
echo 'cp /home/openhabian/wifihotspot/dnsmasq.conf.back /etc/'
cp /home/openhabian/wifihotspot/dnsmasq.conf.back /etc/
echo 'cp /home/openhabian/wifihotspot/dnsmasq.conf.back1 /etc/'
cp /home/openhabian/wifihotspot/dnsmasq.conf.back1 /etc/
echo 'cp /home/openhabian/wifihotspot/hostapd.conf /etc/hostapd/hostapd.conf'
cp /home/openhabian/wifihotspot/hostapd.conf /etc/hostapd/hostapd.conf
echo 'cp /home/openhabian/wifihotspot/wifihotspot.service /etc/systemd/system/'
cp /home/openhabian/wifihotspot/wifihotspot.service /etc/systemd/system/
echo 'cp /home/openhabian/wifihotspot/wifi.sh /home/openhabian/'
cp /home/openhabian/wifihotspot/wifi.sh /home/openhabian/
echo 'cp /home/openhabian/wifihotspot/Wifiserver.py /home/openhabian'
cp /home/openhabian/wifihotspot/Wifiserver.py /home/openhabian
echo 'cp /home/openhabian/wifihotspot/index.html /home/openhabian'
cp /home/openhabian/wifihotspot/index.html /home/openhabian
echo 'cp /home/openhabian/wifihotspot/hostapd /etc/default/hostapd'
cp /home/openhabian/wifihotspot/hostapd /etc/default/hostapd

chmod 755 /etc/systemd/autodiscover/*
echo 'systemctl enable autodiscover.service'
systemctl enable autodiscover.service
echo 'systemctl start autodiscover.service'
systemctl start autodiscover.service

echo 'systemctl enable wifihotspot.service'
systemctl enable wifihotspot.service 
echo 'systemctl start wifihotspot.service'
systemctl start wifihotspot.service

#echo 'systemctl /home/openhabian/wifihotspot unmask hostapd'
echo 'systemctl unmask hostapd'
#systemctl /home/openhabian/wifihotspot unmask hostapd
systemctl unmask hostapd
echo 'systemctl enable hostapd'
systemctl enable hostapd
echo 'systemctl start hostapd'
systemctl start hostapd

echo 'pip install bottle'
pip install bottle
